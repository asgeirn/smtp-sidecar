image: golang:latest

.parallel:
  variables:
  parallel:
    matrix:
      - GOARCH:
          - amd64
          - arm64
        GOOS:
          - darwin
          - linux
  tags:
    - k8s

github:
  stage: .pre
  image: alpine
  rules:
    - if: $CI_PIPELINE_TRIGGERED
  script:
    - apk add --no-cache git
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote add github ${GITHUB_REPO}
    - git fetch github
    - git checkout -b merge-${CI_PIPELINE_IID}
    - git merge --no-commit ${GITHUB_REF}
    - git commit --author "${CI_COMMIT_AUTHOR}" -m "Merged by ${CI_PIPELINE_IID}"

stages:
  - test
  - build
  - deploy

format:
  stage: test
  tags:
    - k8s
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  extends: .parallel
  stage: build
  variables:
    TARGET: ${CI_PROJECT_NAME}-${GOOS}-${GOARCH}
    CGO_ENABLED: "0"
  script:
    - go build -o ${TARGET} ./...
    - |
      curl --fail --location --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
        --cacert /etc/gitlab-runner/certs/ca.crt \
        --upload-file ${TARGET} \
        ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_PIPELINE_IID}/${TARGET}
  artifacts:
    paths:
      - ${TARGET}

deploy:
  stage: deploy
  image: quay.twingine.com/asgeir/coder/buildah
  tags:
    - k8s
  needs:
    - job: compile
      parallel:
        matrix:
        - GOARCH:
            - amd64
            - arm64
          GOOS:
            - linux
      artifacts: true
  variables:
    GIT_STRATEGY: empty
    IMAGE: ${REGISTRY}/${CI_PROJECT_PATH}
  script:
    - buildah login -u=${REGISTRY_USER} -p=${REGISTRY_AUTH} ${REGISTRY}
    - buildah manifest create ${IMAGE}
    - |
      for ARCH in amd64 arm64; do
        container=$(buildah from scratch)
        buildah copy $container ${CI_PROJECT_NAME}-linux-${ARCH} /smtp-sidecar
        buildah config --arch ${ARCH} --entrypoint '["/smtp-sidecar"]' $container
        buildah commit --manifest ${IMAGE} $container ${IMAGE}-${ARCH}
      done
    - buildah manifest push ${IMAGE}